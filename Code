import cv2
import numpy as np

# Use built-in OpenCV path for the cascade file
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

# Start webcam capture
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Convert frame to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    # Draw triangle around each face
    for (x, y, w, h) in faces:
        pt1 = (x + w // 2, y)      # Top-center
        pt2 = (x, y + h)           # Bottom-left
        pt3 = (x + w, y + h)       # Bottom-right

        triangle = np.array([pt1, pt2, pt3], np.int32)
        cv2.polylines(frame, [triangle], isClosed=True, color=(0, 255, 0), thickness=2)

    # Show result
    cv2.imshow("Face Detection with Triangle", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Clean up
cap.release()
cv2.destroyAllWindows()
